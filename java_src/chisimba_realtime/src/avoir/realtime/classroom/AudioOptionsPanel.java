/*
 * 
 * Copyright (C) GNU/GPL AVOIR 2008
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 */

/*
 * AudioOptionsPanel.java
 *
 * Created on 2008/11/10, 09:50:58
 */
package avoir.realtime.classroom;

import javax.swing.JTextField;

/**
 *
 * @author developer
 */
public class AudioOptionsPanel extends javax.swing.JPanel {

    ClassroomMainFrame mf;

    /** Creates new form AudioOptionsPanel */
    public AudioOptionsPanel(ClassroomMainFrame mf) {
        initComponents();
        this.mf = mf;
        audioServerHostField.setText(mf.getRealtimeOptions().getAudioServerHost());
        speakerPortField.setText(mf.getRealtimeOptions().getAudioSpeakerPort() + "");
        micPortField.setText(mf.getRealtimeOptions().getAudioMicPort() + "");
    }

    public int getAudioMicPort() {
        int port = -1;
        try {
            port = Integer.parseInt(micPortField.getText().trim());
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
        return port;
    }

    public int getAudioSpeakerPort() {
        int port = -1;
        try {
            port = Integer.parseInt(speakerPortField.getText().trim());
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
        return port;
    }

    public String getAudioServerHost() {
        return audioServerHostField.getText();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        audioServerHostField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        speakerPortField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        micPortField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Audio Server Host");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel1, gridBagConstraints);

        audioServerHostField.setPreferredSize(new java.awt.Dimension(200, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        add(audioServerHostField, gridBagConstraints);

        jLabel2.setText("Speaker Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(speakerPortField, gridBagConstraints);

        jLabel3.setText("MIC Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(micPortField, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField audioServerHostField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField micPortField;
    private javax.swing.JTextField speakerPortField;
    // End of variables declaration//GEN-END:variables
}
