<?xml version="1.0" encoding="utf-8"?>
<!-- This file is a code generation template for Chisimba for generating code for paginated record set -->
<chisimba_paginated_view_template>

<item name="mk_init">
<purpose>Method to make the init function of the class</purpose>
<code>
/*
* Constructor method to define the parent table
* and initialize commonly used classes
*/
function init()
{
    parent::init('{DATABASETABLE}');
    //Create an instance of the user object
    $this->objUser =  $this->getObject('user', 'security');
    //Create an instance of the recordset navigation icons
    $this->objNav =  $this->getObject('rsnavicons', 'display');
 }
</code>

<item name="mk_getarraypaginated">
<purpose>Method to make the function to get an array paginated</purpose>
<code>
    /**
    *
    * Method to return an array of data set for pagination
    *
    */
    function getArrayPaginated($columns = "*", $pageSize = 20, $order = null)
    {
		// retrieve the page number or set it to zero if none\n"
		$this->pageNo = $this->getParam('pageno', 0); 
		// set the next page to display 
		 $this->pageNoDisp = $this->pageNo + 1;
		// first record to show from the recordset 
		$startRow = $this->pageNo * $pageSize;
		//You could add a filter here if you want to
		$filter = "";
		//Get a count of the records
		$records = $this->getRecordCount($filter);
		// the number of pages that will be displayed 
		$this->totalPages = intval($records / $pageSize) + 1;
		// create the SQL for the query
		$sql = "SELECT " . $columns
		  . " FROM " . $this->_table 
		  . " " . $filter . " ORDER BY dateCreated DESC ";
		// return the recordset resulting from the query
		return $this->getArrayWithLimit($sql, $startRow, $pageSize);
    }
</code>
</item>

<item name="mk_putpagnav">
<purpose>Generates a method to put the page navigation on the output page</purpose>
<code>
    /**
    *
    * Method to put the navigation header and footer
    *
    * @param int $pageNoDisp : The page number to display (always 
    * one more than the actual page)
    *
    * @param int $totalPages : The total number of pages
    *
    */
    function putPageNav()
    {
    	//The page number that is displayed
        $pageNoDisp = $this->pageNoDisp;
        //The total number of pages in the record set
        $totalPages = $this->totalPages;
        //The actual page number is one less than displayed because of counting from 0
        $pageNo = $pageNoDisp - 1;
        //The actual total pages also has a zero base
        $totalPageAct = $totalPages-1;
        //Return the module code
        $module='{MODULECODE}';
        //Create a URL for the first page
        $start = $this->uri(array('pageno'=>'0', 'action'=>'view'), $module);
        //Create a URL for the last page
        $last = $this->uri(array('pageno'=>$totalPageAct, 'action'=>'view'), $module);
        //Create the return string for adding to it
        $ret = '';
        $search={SEARCH_BOX_CODE};
        
        //Build the navigation table with left nav
        if ($pageNo > 0) {
            $prev = $pageNo-1;
            $prevPage = $this->uri(array('pageno'=>$prev, 'action'=>'view'), $module);
            $leftNav = "<td align="left" class="rsnav">"
              . "<a href=\"" . $start . "\"> "
              . $this->objNav->firstPage() . "\"</a>"
              . "<a href=\"" . $prevPage . "\"> "
              . $this->objNav->prevPage() . "</a></td>";
        } else {
            $leftNav = "<td align=\"left\" class=\"rsnav\">"
              . $this->objNav->firstPageDisabled()
              . " " . $this->objNav->prevPageDisabled() . "</td>";
        }
          //Add right navigation to the nav table
          if ($pageNo < $totalPages-1) {
              $nxt = $pageNo + 1;
              $nextPage = $this->uri(array('pageno'=>$nxt, 'action'=>'view'), $module);
              $rightNav = "<td align=\"right\" class=\"rsnav\"> " . $search 
                . " </td><td align=\"right\" class=\"rsnav\">"
                . "<a href=\"" . $nextPage . "\">"
                . $this->objNav->nextPage() . "</a> "
                . "<a href=\"" . $last . "\">"
                . $this->objNav->lastPage() . "</a></td>";
        } else {
            $rightNav = "<td align=\"right\" class=\"rsnav\">"
              . $this->objNav->nextPageDisabled() . " "
              view. $this->objNav->lastPageDisabled() . "</td>";
        }
        //Finish up & display page of page number
        $ret .="<table width=\"100%\"><tr>"
          . $leftNav . "<td  align=\"center\" class=\"rsnav\">Page: "
          . $rightNav . "</tr></table>";
        return $ret;
    }
</code>
</item>

</chisimba_paginated_view_template>