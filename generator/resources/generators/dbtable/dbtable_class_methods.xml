<?xml version="1.0" encoding="utf-8"?>
<!-- This file is a code generation template for Chisimba dbtable class methods -->
<chisimba_dbtable_methods>

<item name="init" type="method">
<description>Standard init method. Constructor for the module
dbtable class for the class being generated. It sets the
database table via the parent dbtable class init method,
and instantiates required objects.</description>
  <code>
    /**
    *
    * Constructor for the module dbtable class for {DATABASETABLE}
    * It sets the database table via the parent dbtable class init
    * method, and instantiates required objects.
    *
    */
    public function init()
    {
        try {
    		parent::init('{DATABASETABLE}');
        	//Instantiate the user object
        	$this->objUser = $this->getObject('user', 'security');
        }
        catch(customException $e) {
            echo customException::cleanUp();
            die();
        }
    }
  </code>
</item>

<item name="saveData" type="method">
<description>Generates a save method for the class being generated</description>
  <code>
    /**
    *
    * Save method for {DATABASETABLE}
    * @param string $mode: edit if coming from edit, add if coming from add
    *
    */
    public function saveData($mode)
    {
{SAVECODE}
    }
</code>
</item>

<item name="getforedit" type="method">
<description>Generates a method to retrieve the data for edit and
prepare the vars for the edit template</description>
  <code>
    /**
    * Method to retrieve the data for edit and prepare the vars for
    * the edit template.
    *
    * @param string $mode The mode should be edit or add
    */
    public function getForEdit()
    {
        $order = $this->getParam("order", NULL);
        // retrieve the group ID from the querystring
        $keyvalue=$this->getParam("id", NULL);
        if (!$keyvalue) {
          die($this->objLanguage->languageText("modules_badkey").": ".$keyvalue);
        }
        // Get the data for edit
        $key="id";
        return $this->getRow($key, $keyvalue);
    }
  </code>
</item>

<item name="deleterecord" type="method">
<description>Genearate a method to delete a record according to its key
and keyvalue</description>
  <code>
    /**
    *
    * Delete a record from {DATABASETABLE}. Use cautiously as it can delete
    * all records by accident if the wrong key is used.
    *
    * @param string $key The key of the record to delete
    * @param string $keyValue The value of the key where deletion should take place
    *
    */
    public function deleteRecord($key, $keyValue)
    {
       $this->delete($key, $keyValue);
    }
  </code>
</item>

</chisimba_dbtable_methods>